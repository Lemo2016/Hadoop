1 HDFS
适用
  兼容廉价的硬件设备 
  流数据读写 
  大数据集 
  简单的文件模型 
  跨平台兼容性强 
不适用
  不适用低延迟数据访问 
  无法高效存储大量小文件 
  不支持多用户写入及任意修改文件 
  
 2 块
 HDFS默认一个块64MB
 一个文件被分成多个块，以块作为存储单位。块的大小远远大于普通文件系统，可以最小化寻址开销
  支持大规模文件存储
  简化系统设计
  适合数据备份
 
 3 名称节点、数据节点
NameNode: 
存储元数据，于在内存中；
保存文件block，datanode之间的映射关系
名称节点（NameNode）
  负责管理分布式文件系统的命名空间（Namespace）
    FsImage用于维护文件系统树以及文件树中所有的文件和文件夹的元数据
      inode是一个文件或目录的元数据的内部表示：
        文件的复制等级、修改和访问时间、访问权限、块大小以及组成文件的块
        对于目录，则存储修改时间、权限和配额元数据
    EditLog操作日志文件中记录了所有针对文件的创建、删除、重命名等操作
  记录了每个文件中各个块所在的数据节点的位置信息
  
启动：
将FsImage文件中的内容加载到内存中
执行EditLog文件中的各项操作，使得内存中的元数据和实际的同步，存在内存中的元数据支持客户端的读操作。
一旦在内存中成功建立文件系统元数据的映射，则创建一个新的FsImage文件和一个空的EditLog文件

SecondaryNameNode第二名称节点：
是用来保存名称节点中对HDFS元数据信息的备份，并减少名称节点重启的时间
一般是单独运行在一台机器上

DataNode: 
存储文件内容，于磁盘（本地Linux文件系统）；
维护block id到datanode本地文件的映射关系
数据节点（DataNode）
  工作节点，负责数据的存储和读取，会根据客户端或者是名称节点的调度来进行数据的存储和检索
  向名称节点定期发送自己所存储的块的列表
  
4 通信协议
所有的HDFS通信协议都是构建在TCP/IP协议基础之上的
客户端协议，客户端通过一个可配置的端口向名称节点主动发起TCP连接，与名称节点进行交互
数据节点协议，名称节点和数据节点之间进行交互
RPC（Remote Procedure Call），客户端与数据节点的交互

5 数据存储
多副本方式冗余存储：通常一个数据块的多个副本会被分布到不同的数据节点上
加快数据传输速度、容易检查数据错误、保证数据可靠性
比如，数据块1被分别存放到数据节点A和C上，数据块2被存放在数据节点A和B上

•第一个副本：放置在上传文件的数据节点；如果是集群外提交，则随机挑选一台磁盘不太满、CPU不太忙的节点
•第二个副本：放置在与第一个副本不同的机架的节点上
•第三个副本：与第一个副本相同机架的其他节点上
•更多副本：随机节点

HDFS提供了一个API可以确定一个数据节点所属的机架ID
客户端也可以调用API获取自己所属的机架ID，优先选择对应的机架ID副本读取数据，否则随机选择一个副本读取

HDFS和其它分布式文件系统的最大区别就是可以调整冗余数据的位置
名称节点出错：
NameNode和SecondaryNameNode互为备份
数据节点出错：
  定期向名称节点发送“心跳”信息
  故障数据节点被标记为“宕机”，节点上所有数据被标记为“不可读”，名称节点不再给它们发送任何I/O请求
  名称节点定期检查上述情况，若数据块的副本数量小于冗余因子，就会启动数据冗余复制，为它生成新的副本
数据出错：
•客户端在读取到数据后，会采用md5和sha1对数据块进行校验，以确定读取到正确的数据
•在文件被创建时，客户端就会对每一个文件块进行信息摘录，并把这些信息写入到同一个路径的隐藏文件里面
•当客户端读取文件的时候，会先读取利用该信息文件对每个读取的数据块进行校验
•如果校验出错，客户端就会请求另一个数据节点读取文件，并向名称节点报告block有误，名称节点会定期检查、重新复制这个块

6








